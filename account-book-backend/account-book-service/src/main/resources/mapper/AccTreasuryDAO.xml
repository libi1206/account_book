<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libi.accountbook.dao.AccTreasuryDAO">
  <resultMap id="BaseResultMap" type="com.libi.accountbook.entity.AccTreasury">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="treasury_name" jdbcType="VARCHAR" property="treasuryName" />
    <result column="moner" jdbcType="DECIMAL" property="moner" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, treasury_name, moner, note, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acc_treasury
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from acc_treasury
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.libi.accountbook.entity.AccTreasury" useGeneratedKeys="true">
    insert into acc_treasury (user_id, treasury_name, moner, 
      note, create_time)
    values (#{userId,jdbcType=BIGINT}, #{treasuryName,jdbcType=VARCHAR}, #{moner,jdbcType=DECIMAL}, 
      #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.libi.accountbook.entity.AccTreasury" useGeneratedKeys="true">
    insert into acc_treasury
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="treasuryName != null">
        treasury_name,
      </if>
      <if test="moner != null">
        moner,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="treasuryName != null">
        #{treasuryName,jdbcType=VARCHAR},
      </if>
      <if test="moner != null">
        #{moner,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.libi.accountbook.entity.AccTreasury">
    update acc_treasury
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="treasuryName != null">
        treasury_name = #{treasuryName,jdbcType=VARCHAR},
      </if>
      <if test="moner != null">
        moner = #{moner,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libi.accountbook.entity.AccTreasury">
    update acc_treasury
    set user_id = #{userId,jdbcType=BIGINT},
      treasury_name = #{treasuryName,jdbcType=VARCHAR},
      moner = #{moner,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAllByUser" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acc_treasury
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
</mapper>