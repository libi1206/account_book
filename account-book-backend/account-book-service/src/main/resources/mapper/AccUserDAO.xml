<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libi.accountbook.dao.AccUserDAO">
  <resultMap id="BaseResultMap" type="com.libi.accountbook.entity.AccUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="authority" jdbcType="VARCHAR" property="authority" />
    <result column="neck_name" jdbcType="VARCHAR" property="neckName" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, `password`, sex, authority, neck_name, head_img, phone, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acc_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    SET foreign_key_checks = 0;
    delete from acc_user
    where id = #{id,jdbcType=BIGINT};
    SET foreign_key_checks = 1;
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.libi.accountbook.entity.AccUser" useGeneratedKeys="true">
    insert into acc_user (user_name, `password`, sex, 
      authority, neck_name, head_img, 
      phone, create_time)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{authority,jdbcType=VARCHAR}, #{neckName,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.libi.accountbook.entity.AccUser" useGeneratedKeys="true">
    insert into acc_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="authority != null">
        authority,
      </if>
      <if test="neckName != null">
        neck_name,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="authority != null">
        #{authority,jdbcType=VARCHAR},
      </if>
      <if test="neckName != null">
        #{neckName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.libi.accountbook.entity.AccUser">
    update acc_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="authority != null">
        authority = #{authority,jdbcType=VARCHAR},
      </if>
      <if test="neckName != null">
        neck_name = #{neckName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libi.accountbook.entity.AccUser">
    update acc_user
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      authority = #{authority,jdbcType=VARCHAR},
      neck_name = #{neckName,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectUserByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from acc_user where phone = #{phone}
  </select>
  <select id="selectUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from acc_user where user_name = #{userName}
  </select>
  <select id="selectAllUserByFamily" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from acc_user where id in (
    select user_id from family_mapping where family_id = #{familyId}
    )
  </select>

</mapper>